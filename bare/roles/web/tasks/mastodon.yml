---
- name: Clone mastodon
  git:
    repo: "https://github.com/tootsuite/mastodon.git"
    dest: "~/live"
    clone: true

- name: Update to latest version
  shell: "git fetch; git checkout $(git tag -l | grep -v 'rc[0-9]*$' | sort -V | tail -n 1)"
  args:
    chdir: "~/live"

- name: Bundle install
  shell: "~/.rbenv/shims/bundle install -j$(getconf _NPROCESSORS_ONLN) --deployment --without development test"
  args:
    chdir: "~/live"

- name: Yarn install
  command: yarn install --pure-lockfile
  args:
    chdir: "~/live"

- name: Install systemd sidekiq Service Files
  copy:
    src: ../files/systemd/mastodon-sidekiq.service
    dest: /etc/systemd/system/
  become: true
  become_user: root

- name: Install systemd web Service Files
  copy:
    src: ../files/systemd/mastodon-web.service
    dest: /etc/systemd/system/
  become: true
  become_user: root

- name: Install systemd streaming Service Files
  copy:
    src: ../files/systemd/mastodon-streaming.service
    dest: /etc/systemd/system/
  become: true
  become_user: root

- name: Media cleanup cronjob
  cron:
    name: "media cleanup"
    minute: "15"
    hour: "1"
    job: "cd /home/mastodon/live && RAILS_ENV=production /home/mastodon/.rbenv/shims/bundle exec rake mastodon:media:remove_remote"

- stat: path=/home/mastodon/live/.env.production
  register: production_config

- name: Migrate database
  shell: "RAILS_ENV=production ~/.rbenv/shims/bundle exec rails db:migrate"
  args:
    chdir: "~/live"
  when: production_config.stat.exists

- name: Precompile assets
  shell: "RAILS_ENV=production ~/.rbenv/shims/bundle exec rails assets:precompile"
  args:
    chdir: "~/live"
  when: production_config.stat.exists

- name: Enable mastodon-web
  command: systemctl enable mastodon-web.service
  become: true
  become_user: root

- name: Enable mastodon-streaming
  command: systemctl enable mastodon-streaming.service
  become: true
  become_user: root

- name: Enable mastodon-sidekiq
  command: systemctl enable mastodon-sidekiq.service
  become: true
  become_user: root

- name: Restart mastodon-web
  command: systemctl restart mastodon-web.service
  when: production_config.stat.exists
  become: true
  become_user: root

- name: Restart mastodon-streaming
  command: systemctl restart mastodon-streaming.service
  when: production_config.stat.exists
  become: true
  become_user: root

- name: Restart mastodon-sidekiq
  command: systemctl restart mastodon-sidekiq.service
  when: production_config.stat.exists
  become: true
  become_user: root